version: 2.1

parameters:
  ctdc-base:
    type: boolean
    default: false

executors:
  vm-build-amd64:
    environment:
      ARCH_TAG : amd64
      BUILDX_PLATFORMS : linux/amd64
    machine:
        image: ubuntu-2204:current
        docker_layer_caching: true
    resource_class: medium
  
  vm-build-arm64:
    environment:
      ARCH_TAG : arm64
      BUILDX_PLATFORMS : linux/arm64/v8
    machine:
        image: ubuntu-2204:current
        docker_layer_caching: true
    resource_class: arm.medium
  
  docker-other:
    docker:
      - image: cimg/base:current
    resource_class : small

jobs:
  DockerBuild-amd64:
      parameters:
        flavour:
          type: string
        os:
          type: string
      executor: vm-build-amd64
      steps:
      - checkout
      - run :
          name: Build Docker image
          command: cd docker/<<parameters.flavour>>/<< parameters.os >> && docker buildx build --platform $BUILDX_PLATFORMS -t cf3005/ctdc-<<parameters.flavour>>:<< parameters.os >>-$ARCH_TAG .
      - run :
          name: Publish Docker Image to Docker Hub
          command: docker login -u $DOCKER_LOGIN -p $DOCKER_PASSWORD && docker push cf3005/ctdc-<<parameters.flavour>>:<< parameters.os >>-$ARCH_TAG
  
  DockerBuild-arm64:
      parameters:
        flavour:
          type: string
        os:
          type: string
      executor: vm-build-arm64
      steps:
      - checkout
      - run :
          name: Build Docker image
          command: cd docker/<<parameters.flavour>>/<< parameters.os >> && docker buildx build --platform $BUILDX_PLATFORMS -t cf3005/ctdc-<<parameters.flavour>>:<< parameters.os >>-$ARCH_TAG .
      - run :
          name: Publish Docker Image to Docker Hub
          command: docker login -u $DOCKER_LOGIN -p $DOCKER_PASSWORD && docker push cf3005/ctdc-<<parameters.flavour>>:<< parameters.os >>-$ARCH_TAG

  DockerPublish-multiarch:
      parameters:
        flavour:
          type: string
        os:
          type: string
      executor: docker-other
      steps:
        - setup_remote_docker :
           docker_layer_caching: true
        - run :
            name: Publish MultiArch
            command: |
              export DOCKER_CLI_EXPERIMENTAL=enabled
              docker manifest create cf3005/ctdc-<<parameters.flavour>>:<< parameters.os >> cf3005/ctdc-<<parameters.flavour>>:<< parameters.os >>-amd64 cf3005/ctdc-<<parameters.flavour>>:<< parameters.os >>-arm64
              docker login -u $DOCKER_LOGIN -p $DOCKER_PASSWORD && docker manifest push cf3005/ctdc-<<parameters.flavour>>:<< parameters.os >>

  DeleteTempImage:
    parameters:
      flavour:
        type: string
      os:
        type: string
    executor: docker-other
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - run :
          name : Get Auth Token and Delete amd64 and arm64 image
          command : |
            export TOKEN=`curl -s -H "Content-Type: application/json" -X POST -H "Content-Type: application/json" -d '{"username": "'$DOCKER_LOGIN'", "password": "'$DOCKER_PASSWORD'"}' "https://hub.docker.com/v2/users/login/" | jq -r .token`
            echo $TOKEN
            curl "https://hub.docker.com/v2/repositories/cf3005/ctdc-<<parameters.flavour>>/tags/<< parameters.os >>-amd64/" -X DELETE -H "Authorization: JWT ${TOKEN}"
            curl "https://hub.docker.com/v2/repositories/cf3005/ctdc-<<parameters.flavour>>/tags/<< parameters.os >>-arm64/" -X DELETE -H "Authorization: JWT ${TOKEN}"

setup: true

orbs:
  path-filtering: circleci/path-filtering@1.0.0

workflows:
  file-check:
    jobs:
      - path-filtering/filter:
          name: check-updated-file
          base-revision: main
          config-path: .circleci/config.yml
          mapping: |
            docker/base/.* ctdc-base true
  
  build-base:
    when: << pipeline.parameters.ctdc-base >>
    jobs:
      - DockerBuild-amd64:
          flavour: base
          name: cf3005/ctdc-base:<< matrix.os >>-amd64
          matrix:
            parameters:
              os: [debian,fedora,ubuntu]
      - DockerBuild-arm64:
          flavour: base
          name: cf3005/ctdc-base:<< matrix.os >>-arm64
          matrix:
            parameters:
              os: [debian,fedora,ubuntu]
      - DockerPublish-multiarch:
          flavour: base
          name: cf3005/ctdc-base:<< matrix.os >>
          matrix:
            parameters:
              os: [debian,fedora,ubuntu]
          requires:
            - "cf3005/ctdc-base:<< matrix.os >>-amd64"
            - "cf3005/ctdc-base:<< matrix.os >>-arm64"
      - DeleteTempImage:
          flavour: base
          name : clean-base:<< matrix.os >>
          matrix:
            parameters:
              os : ["debian","fedora","ubuntu"]
          requires:
            - publish-cf3005/ctdc-base:<< matrix.os >>